Vamos supor que nós temos a tarefa de criar uma nova funcionalidade no projeto a partir daquilo já foi desenvolvido até aqui, sendo assim nós devemos criar uma nova branch, para não trazer instabilidade a um código que está estável. 

Mas queremos que essa branch já traga consigo todos os arquivos da nossa branch principal. Para atender essa demanda seguimos os seguintes passos:

//Certificamos que estamos na branch que desejamos copiar os aquivos
$ git branch

E rodamos o seguinte comando 

$ git checkout -b nome_da_nova branch

No meu caso ficou assim:

$ git branch
* master
  staging

$ git checkout -b create-css
Switched to a new branch 'create-css'

E para verificar se estamos na branch correta, rodamos o famoso git branch

$ git branch
* create-css
  master
  staging

Podemos fazer qualquer alteração apenas para efeito de teste ->

Rodar o comando: git add . (ou para os mais metódicos também podemos rodar git status, mas isso varia de pessoa para pessoa) ->

git commit -m "descrição do commit" ->

Pronto, com apena isso já atualizamos o nosso arquivo localmente, para ver que um commit foi criado podemos rodar o comando: git reflog e irá aparecer o id daquele commit.

Agora supondo que nós já testamos o código e está funcionando, podemos colocar ele na nossa branch principal, a master.

Para isso fazemos:

git checkout master (Para irmos para o nosso branch principal) ->

git pull (Para não atualizarmos código desatualizado, isso pode quebrar o sistema) ->

git merge create-css (Para pegar aquilo que foi feio na nossa nova branch) ->

git push (Para subir os nossos arquivos para o servidor)

Nesse momento pode haver uma dúvida sobre o porque não colocamos a nossa nova branch no servidor, bem não era necessário colocá-la para atualizar a nossa master, então não tem nenhum problema, é uma questão de preferência.

Porém vale ressaltar que sempre quando fazemos o nosso primeiro push em uma branch, devemos usar o comando:

git push --set-upstream origin nome_da_branch

Agora irei mostrar a sequência que eu fiz e o seu resultado:

$ git status
On branch create-css
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   teste_git.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        style.css

no changes added to commit (use "git add" and/or "git commit -a")

$ git add .

$ git commit -m "Adding a beautiful CSS"
[create-css 3555a47] Adding a beautiful CSS
 2 files changed, 41 insertions(+), 15 deletions(-)
 create mode 100644 style.css
 rewrite teste_git.html (67%)

$ git reflog
...
3555a47 (HEAD -> create-css) HEAD@{0}: commit: Adding a beautiful CSS
...

$ git checkout master
Switched to branch 'master'
Your branch is up to date with 'origin/master'.

$ git pull
Already up to date.

$ git merge create-css
Updating ba28e24..3555a47
Fast-forward
 style.css      | 25 +++++++++++++++++++++++++
 teste_git.html |  7 ++++---
 2 files changed, 29 insertions(+), 3 deletions(-)
 create mode 100644 style.css

$ git push
Enumerating objects: 6, done.
Counting objects: 100% (6/6), done.
Delta compression using up to 2 threads
Compressing objects: 100% (4/4), done.
Writing objects: 100% (4/4), 734 bytes | 183.00 KiB/s, done.
Total 4 (delta 2), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (2/2), completed with 2 local objects.
To https://github.com/Molina0127/Aprendendo_git.git
   ba28e24..3555a47  master -> master

Agora já podemos ir no github e ver se está tudo funcionando normalmente, no meu caso funcionou perfeitamente.

Agora eu vou colocar na nuvem a nova branch, para isso:

git checkout nome_da_branch ->

git branch ->

git status ->

git push --set-upstream origin nome_da_branch ->

E pronto temos a nossa branch na nuvem.

Vou mostrar como eu fiz:

$ git checkout create-css
Switched to branch 'create-css'

$ git branch
* create-css
  master
  staging

$ git status
On branch create-css
nothing to commit, working tree clean

$ git push --set-upstream origin create-css
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0
remote:
remote: Create a pull request for 'create-css' on GitHub by visiting:
remote:      https://github.com/Molina0127/Aprendendo_git/pull/new/create-css
remote:
To https://github.com/Molina0127/Aprendendo_git.git
 * [new branch]      create-css -> create-css
branch 'create-css' set up to track 'origin/create-css'.

E tudo está funcionando perfeitamente no github.




 